{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-9334618"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GOLD_sql_Clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_cliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo_cliente",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "apellido",
						"type": "varchar"
					},
					{
						"name": "genero",
						"type": "char"
					},
					{
						"name": "fecha_nacimiento",
						"type": "date"
					},
					{
						"name": "pais",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "CLIENTES"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOLD_sql_HECHOS_VENTAS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "numero_orden",
						"type": "varchar"
					},
					{
						"name": "codigo_producto",
						"type": "varchar"
					},
					{
						"name": "id_cliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fecha_orden",
						"type": "date"
					},
					{
						"name": "fecha_envio",
						"type": "date"
					},
					{
						"name": "ventas",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "HECHOS_VENTAS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOLD_sql_Productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_ventas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GOLD"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_producto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo_producto",
						"type": "varchar"
					},
					{
						"name": "nombre_producto",
						"type": "varchar"
					},
					{
						"name": "costo_producto",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "linea_producto",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "subcategoria",
						"type": "varchar"
					},
					{
						"name": "requiere_mantenimiento",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "GOLD",
					"table": "PRODUCTOS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_Detalles_Ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Detalles_ventas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_Detalles_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as string,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as string,",
						"          sls_quantity as string,",
						"          sls_price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as integer,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as decimal(18,2),",
						"          sls_quantity as integer,",
						"          sls_price as decimal(18,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_Clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Clientes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          cst_id as string,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cst_id as integer,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          cst_id,",
						"          cst_key,",
						"          cst_firstname,",
						"          cst_lastname,",
						"          cst_marital_status,",
						"          cst_gndr",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_Clientes_BD_GEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Clientes_BD_GEN_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_BD_GEN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_Clientes_location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Clientes_location_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_location",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_ProductoS_CAT_MANT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Productos_CAT_MANT_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_CAT_MANT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_df_Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_Productos_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          prd_id as string,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_cliente as integer,",
						"          codigo_cliente as string,",
						"          nombre as string,",
						"          apellido as string,",
						"          genero as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  c.cst_id AS id_cliente,\\n  c.cst_key AS codigo_cliente,\\n  c.cst_firstname AS nombre,\\n  c.cst_lastname AS apellido,\\n  c.cst_gndr AS genero\\nFROM BRONZE.CLIENTES c\\nWHERE c.cst_id IS NOT NULL -- evita los NULLs\\n  AND c.cst_id IN (\\n    SELECT cst_id\\n    FROM BRONZE.CLIENTES\\n    GROUP BY cst_id\\n    HAVING COUNT(*) = 1 \\n  )',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          id_cliente as integer,",
						"          codigo_cliente as string,",
						"          nombre as string,",
						"          apellido as string,",
						"          genero as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_cliente as integer,",
						"          codigo_cliente as string,",
						"          nombre as string,",
						"          apellido as string,",
						"          genero as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id_cliente,",
						"          codigo_cliente,",
						"          nombre,",
						"          apellido,",
						"          genero",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Clientes_location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_location",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes_location",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          pais as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  cl.CID,\\n  cl.CNTRY AS pais\\nFROM BRONZE.CLIENTES_LOCATION cl',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          CID as string,",
						"          pais as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          pais as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          CID,",
						"          pais",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Clientes_BD_GEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_BD_GEN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes_BD_GEN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          fecha_nacimiento as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  c.CID,\\n  CONVERT(date, c.BDATE) AS fecha_nacimiento\\nFROM BRONZE.CLIENTES_BD_GEN c',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          CID as string,",
						"          fecha_nacimiento as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          fecha_nacimiento as date,",
						"          genero as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          CID,",
						"          fecha_nacimiento",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_producto as integer,",
						"          codigo_producto as string,",
						"          nombre_producto as string,",
						"          costo_producto as decimal(18,2),",
						"          linea_producto as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  TRY_CAST(p.prd_id AS int) AS id_producto,\\n  p.prd_key AS codigo_producto,\\n  p.prd_nm AS nombre_producto,\\n  TRY_CAST(NULLIF(p.prd_cost, \\'\\') AS decimal(18,2)) AS costo_producto,\\n  p.prd_line AS linea_producto\\nFROM BRONZE.PRODUCTOS p',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          id_producto as integer,",
						"          codigo_producto as string,",
						"          nombre_producto as string,",
						"          costo_producto as decimal(18,2),",
						"          linea_producto as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_producto as integer,",
						"          codigo_producto as string,",
						"          nombre_producto as string,",
						"          costo_producto as decimal(18,2),",
						"          linea_producto as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id_producto,",
						"          codigo_producto,",
						"          nombre_producto,",
						"          costo_producto,",
						"          linea_producto",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Productos_CAT_MANT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_CAT_MANT",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Productos_CAT_MANT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_producto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          requiere_mantenimiento as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  p.ID AS id_producto,\\n  p.CAT AS categoria,\\n  p.SUBCAT AS subcategoria,\\n  CASE \\n    WHEN p.MAINTENANCE = \\'Yes\\' THEN 1 \\n    ELSE 0 \\n  END AS requiere_mantenimiento\\nFROM BRONZE.PRODUCTOS_CAT_MANT p',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          id_producto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          requiere_mantenimiento as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_producto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          requiere_mantenimiento as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id_producto,",
						"          categoria,",
						"          subcategoria,",
						"          requiere_mantenimiento",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_Detalles_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_Detalles_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          numero_orden as string,",
						"          codigo_producto as string,",
						"          id_cliente as integer,",
						"          fecha_orden as date,",
						"          fecha_envio as date,",
						"          ventas as integer,",
						"          fecha_orden_invalida as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n  d.sls_ord_num AS numero_orden,\\n  d.sls_prd_key AS codigo_producto,\\n  d.sls_cust_id AS id_cliente,\\n  TRY_CONVERT(date, d.sls_order_dt) AS fecha_orden,\\n  TRY_CONVERT(date, d.sls_ship_dt) AS fecha_envio,\\n  TRY_CAST(d.sls_sales AS int) AS ventas,\\n  CASE \\n    WHEN TRY_CONVERT(date, d.sls_order_dt) IS NULL THEN 1\\n    ELSE 0\\n  END AS fecha_orden_invalida\\nFROM BRONZE.DETALLE_VENTAS d',",
						"     format: 'query') ~> source1",
						"source1 cast(output(",
						"          numero_orden as string,",
						"          codigo_producto as string,",
						"          id_cliente as integer,",
						"          fecha_orden as date 'yyyy-MM-dd',",
						"          fecha_envio as date 'yyyy-MM-dd',",
						"          ventas as integer,",
						"          fecha_orden_invalida as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          numero_orden as string,",
						"          codigo_producto as string,",
						"          id_cliente as integer,",
						"          fecha_orden as date,",
						"          fecha_envio as date,",
						"          ventas as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          numero_orden,",
						"          codigo_producto,",
						"          id_cliente,",
						"          fecha_orden,",
						"          fecha_envio,",
						"          ventas",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gold_df_Clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes_location",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "SILVER_sql_Clientes_BD_GEN",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GOLD_sql_Clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "select2"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "select3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_cliente as integer,",
						"          codigo_cliente as string,",
						"          nombre as string,",
						"          apellido as string,",
						"          genero as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          CID as string,",
						"          pais as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source(output(",
						"          CID as string,",
						"          fecha_nacimiento as date,",
						"          genero as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source3",
						"source1 select(mapColumn(",
						"          id_cliente,",
						"          codigo_cliente,",
						"          nombre,",
						"          apellido,",
						"          genero",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select2 sort(asc(id_cliente, true)) ~> sort1",
						"derivedColumn1 filter(!isNull(id_cliente) && id_cliente > 0 && !isNull(codigo_cliente) && length(nombre) > 2\r",
						") ~> filter1",
						"select1 derive(nombre = iif(isNull(nombre) || nombre == \"\", \"SinNombre\", nombre)\r",
						") ~> derivedColumn1",
						"source2 derive(CID = upper(trim(replace(CID, \"-\", \"\")))) ~> derivedColumn2",
						"filter1, derivedColumn2 join(codigo_cliente == CID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join2 derive(pais = iif(isNull(pais) || pais == \"\", \"No ingresado\", pais)\r",
						") ~> derivedColumn3",
						"derivedColumn3 select(mapColumn(",
						"          id_cliente,",
						"          codigo_cliente,",
						"          nombre,",
						"          apellido,",
						"          genero = select1@genero,",
						"          fecha_nacimiento,",
						"          pais",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"join1, select3 join(codigo_cliente == select3@CID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"source3 derive(CID = replace(replace(CID, \"NAS\", \"\"), \"AW\", \"AW\")) ~> derivedColumn4",
						"derivedColumn4 select(mapColumn(",
						"          CID,",
						"          fecha_nacimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_cliente as integer,",
						"          codigo_cliente as string,",
						"          nombre as string,",
						"          apellido as string,",
						"          genero as string,",
						"          fecha_nacimiento as date,",
						"          pais as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id_cliente,",
						"          codigo_cliente,",
						"          nombre,",
						"          apellido,",
						"          fecha_nacimiento,",
						"          pais",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GOLD_sql_Clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gold_df_Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Productos",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "SILVER_sql_Productos_CAT_MANT",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GOLD_sql_Productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "select2"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_producto as integer,",
						"          codigo_producto as string,",
						"          nombre_producto as string,",
						"          costo_producto as decimal(18,2),",
						"          linea_producto as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          id_producto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          requiere_mantenimiento as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"derivedColumn1, derivedColumn2 join(codigo_producto == derivedColumn2@id_producto,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"select2 select(mapColumn(",
						"          id_producto,",
						"          codigo_producto,",
						"          nombre_producto,",
						"          precio_limpio,",
						"          categoria,",
						"          subcategoria,",
						"          linea_producto,",
						"          requiere_mantenimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"source1 derive(codigo_producto = replace(substring(codigo_producto, 0, 5), '-', '')\r",
						") ~> derivedColumn1",
						"source2 derive(id_producto = replace(substring(id_producto, 0, 5), '_', '')) ~> derivedColumn2",
						"join1 derive(precio_limpio = iif(isNull(costo_producto), toDecimal(-1), costo_producto)\r",
						") ~> derivedColumn3",
						"derivedColumn3 select(mapColumn(",
						"          id_producto = source1@id_producto,",
						"          codigo_producto,",
						"          nombre_producto,",
						"          precio_limpio,",
						"          linea_producto,",
						"          categoria,",
						"          subcategoria,",
						"          requiere_mantenimiento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1 sort(asc(id_producto, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_producto as integer,",
						"          codigo_producto as string,",
						"          nombre_producto as string,",
						"          costo_producto as decimal(18,2),",
						"          linea_producto as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          requiere_mantenimiento as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          id_producto,",
						"          codigo_producto,",
						"          nombre_producto,",
						"          costo_producto = precio_limpio,",
						"          linea_producto,",
						"          categoria,",
						"          subcategoria,",
						"          requiere_mantenimiento",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GOLD_sql_Productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gold_df_Hechos_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "GOLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GOLD_sql_HECHOS_VENTAS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          numero_orden as string,",
						"          codigo_producto as string,",
						"          id_cliente as integer,",
						"          fecha_orden as date,",
						"          fecha_envio as date,",
						"          ventas as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sort(asc(codigo_producto, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          numero_orden as string,",
						"          codigo_producto as string,",
						"          id_cliente as integer,",
						"          fecha_orden as date,",
						"          fecha_envio as date,",
						"          ventas as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: true,",
						"     mapColumn(",
						"          numero_orden,",
						"          codigo_producto,",
						"          id_cliente,",
						"          fecha_orden,",
						"          fecha_envio,",
						"          ventas",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GOLD_sql_HECHOS_VENTAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE-PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bronze-Clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Bronze-Clientes_location",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Bronze-Clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Clientes_location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Bronze-Clientes-BD-GEN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Bronze-Clientes_location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Clientes_BD_GEN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Bronze-Productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Bronze-Clientes-BD-GEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Bronze-Productos-CAT-MANT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Bronze-Productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_ProductoS_CAT_MANT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Bronze-Detalle-ventas",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Bronze-Productos-CAT-MANT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Detalles_Ventas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Clientes')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Clientes_location')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Clientes_BD_GEN')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Productos')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_ProductoS_CAT_MANT')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Detalles_Ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Silver_Clientes_location",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Silver_Clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Silver_df_Clientes_location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Silver_Clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Silver_df_Clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Silver_Clientes_BD-GEN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Silver_Clientes_location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze_df_Clientes_BD_GEN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Silver_Productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Silver_Clientes_BD-GEN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Silver_df_Productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Silver_Productos_CAT_MANT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Silver_Productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Silver_df_Productos_CAT_MANT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					},
					{
						"name": "Silver_Detalles_Ventas",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Silver_Productos_CAT_MANT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Silver_df_Detalles_ventas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Silver_df_Clientes_location')]",
				"[concat(variables('factoryId'), '/dataflows/Silver_df_Clientes')]",
				"[concat(variables('factoryId'), '/dataflows/Bronze_df_Clientes_BD_GEN')]",
				"[concat(variables('factoryId'), '/dataflows/Silver_df_Productos')]",
				"[concat(variables('factoryId'), '/dataflows/Silver_df_Productos_CAT_MANT')]",
				"[concat(variables('factoryId'), '/dataflows/Silver_df_Detalles_ventas')]"
			]
		}
	]
}