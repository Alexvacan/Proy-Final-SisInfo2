{
	"name": "Gold_df_Productos",
	"properties": {
		"folder": {
			"name": "GOLD"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SILVER_sql_Productos",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SILVER_sql_Productos_CAT_MANT",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_producto as integer,",
				"          codigo_producto as string,",
				"          nombre_producto as string,",
				"          costo_producto as decimal(18,2),",
				"          linea_producto as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          id_producto as string,",
				"          categoria as string,",
				"          subcategoria as string,",
				"          requiere_mantenimiento as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"derivedColumn1, derivedColumn2 join(codigo_producto == derivedColumn2@id_producto,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select2 select(mapColumn(",
				"          id_producto,",
				"          codigo_producto,",
				"          nombre_producto,",
				"          precio_limpio,",
				"          categoria,",
				"          subcategoria,",
				"          linea_producto,",
				"          requiere_mantenimiento",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source1 derive(codigo_producto = replace(substring(codigo_producto, 0, 5), '-', '')\r",
				") ~> derivedColumn1",
				"source2 derive(id_producto = replace(substring(id_producto, 0, 5), '_', '')) ~> derivedColumn2",
				"join1 derive(precio_limpio = iif(isNull(costo_producto), toDecimal(-1), costo_producto)\r",
				") ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          id_producto = source1@id_producto,",
				"          codigo_producto,",
				"          nombre_producto,",
				"          precio_limpio,",
				"          linea_producto,",
				"          categoria,",
				"          subcategoria,",
				"          requiere_mantenimiento",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2"
			]
		}
	}
}